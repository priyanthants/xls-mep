(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{FVPZ:function(t,e,i){"use strict";i.d(e,"b",(function(){return m})),i.d(e,"a",(function(){return x})),i.d(e,"c",(function(){return o})),i.d(e,"d",(function(){return l})),i.d(e,"e",(function(){return h}));var s=i("8Y7J"),r=i("Xd0L"),n=i("KCVW");const h=new s.q("MAT_GRID_LIST");class o{constructor(t,e){this._element=t,this._gridList=e,this._rowspan=1,this._colspan=1}get rowspan(){return this._rowspan}set rowspan(t){this._rowspan=Math.round(Object(n.f)(t))}get colspan(){return this._colspan}set colspan(t){this._colspan=Math.round(Object(n.f)(t))}_setStyle(t,e){this._element.nativeElement.style[t]=e}}class l{constructor(t){this._element=t}ngAfterContentInit(){Object(r.J)(this._lines,this._element)}}class a{constructor(){this.columnIndex=0,this.rowIndex=0}get rowCount(){return this.rowIndex+1}get rowspan(){const t=Math.max(...this.tracker);return t>1?this.rowCount+t-1:this.rowCount}update(t,e){this.columnIndex=0,this.rowIndex=0,this.tracker=new Array(t),this.tracker.fill(0,0,this.tracker.length),this.positions=e.map(t=>this._trackTile(t))}_trackTile(t){const e=this._findMatchingGap(t.colspan);return this._markTilePosition(e,t),this.columnIndex=e+t.colspan,new c(this.rowIndex,e)}_findMatchingGap(t){if(t>this.tracker.length)throw Error(`mat-grid-list: tile with colspan ${t} is wider than `+`grid with cols="${this.tracker.length}".`);let e=-1,i=-1;do{this.columnIndex+t>this.tracker.length?(this._nextRow(),e=this.tracker.indexOf(0,this.columnIndex),i=this._findGapEndIndex(e)):-1!=(e=this.tracker.indexOf(0,this.columnIndex))?(i=this._findGapEndIndex(e),this.columnIndex=e+1):(this._nextRow(),e=this.tracker.indexOf(0,this.columnIndex),i=this._findGapEndIndex(e))}while(i-e<t||0==i);return Math.max(e,0)}_nextRow(){this.columnIndex=0,this.rowIndex++;for(let t=0;t<this.tracker.length;t++)this.tracker[t]=Math.max(0,this.tracker[t]-1)}_findGapEndIndex(t){for(let e=t+1;e<this.tracker.length;e++)if(0!=this.tracker[e])return e;return this.tracker.length}_markTilePosition(t,e){for(let i=0;i<e.colspan;i++)this.tracker[t+i]=e.rowspan}}class c{constructor(t,e){this.row=t,this.col=e}}const _=/^-?\d+((\.\d+)?[A-Za-z%$]?)+$/;class g{constructor(){this._rows=0,this._rowspan=0}init(t,e,i,s){this._gutterSize=S(t),this._rows=e.rowCount,this._rowspan=e.rowspan,this._cols=i,this._direction=s}getBaseTileSize(t,e){return`(${t}% - (${this._gutterSize} * ${e}))`}getTilePosition(t,e){return 0===e?"0":p(`(${t} + ${this._gutterSize}) * ${e}`)}getTileSize(t,e){return`(${t} * ${e}) + (${e-1} * ${this._gutterSize})`}setStyle(t,e,i){let s=100/this._cols,r=(this._cols-1)/this._cols;this.setColStyles(t,i,s,r),this.setRowStyles(t,e,s,r)}setColStyles(t,e,i,s){let r=this.getBaseTileSize(i,s);t._setStyle("rtl"===this._direction?"right":"left",this.getTilePosition(r,e)),t._setStyle("width",p(this.getTileSize(r,t.colspan)))}getGutterSpan(){return`${this._gutterSize} * (${this._rowspan} - 1)`}getTileSpan(t){return`${this._rowspan} * ${this.getTileSize(t,1)}`}getComputedHeight(){return null}}class u extends g{constructor(t){super(),this.fixedRowHeight=t}init(t,e,i,s){if(super.init(t,e,i,s),this.fixedRowHeight=S(this.fixedRowHeight),!_.test(this.fixedRowHeight))throw Error(`Invalid value "${this.fixedRowHeight}" set as rowHeight.`)}setRowStyles(t,e){t._setStyle("top",this.getTilePosition(this.fixedRowHeight,e)),t._setStyle("height",p(this.getTileSize(this.fixedRowHeight,t.rowspan)))}getComputedHeight(){return["height",p(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)]}reset(t){t._setListStyle(["height",null]),t._tiles&&t._tiles.forEach(t=>{t._setStyle("top",null),t._setStyle("height",null)})}}class d extends g{constructor(t){super(),this._parseRatio(t)}setRowStyles(t,e,i,s){this.baseTileHeight=this.getBaseTileSize(i/this.rowHeightRatio,s),t._setStyle("marginTop",this.getTilePosition(this.baseTileHeight,e)),t._setStyle("paddingTop",p(this.getTileSize(this.baseTileHeight,t.rowspan)))}getComputedHeight(){return["paddingBottom",p(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)]}reset(t){t._setListStyle(["paddingBottom",null]),t._tiles.forEach(t=>{t._setStyle("marginTop",null),t._setStyle("paddingTop",null)})}_parseRatio(t){const e=t.split(":");if(2!==e.length)throw Error(`mat-grid-list: invalid ratio given for row-height: "${t}"`);this.rowHeightRatio=parseFloat(e[0])/parseFloat(e[1])}}class w extends g{setRowStyles(t,e){let i=this.getBaseTileSize(100/this._rowspan,(this._rows-1)/this._rows);t._setStyle("top",this.getTilePosition(i,e)),t._setStyle("height",p(this.getTileSize(i,t.rowspan)))}reset(t){t._tiles&&t._tiles.forEach(t=>{t._setStyle("top",null),t._setStyle("height",null)})}}function p(t){return`calc(${t})`}function S(t){return t.match(/([A-Za-z%]+)$/)?t:`${t}px`}const f="fit";class x{constructor(t,e){this._element=t,this._dir=e,this._gutter="1px"}get cols(){return this._cols}set cols(t){this._cols=Math.max(1,Math.round(Object(n.f)(t)))}get gutterSize(){return this._gutter}set gutterSize(t){this._gutter=`${null==t?"":t}`}get rowHeight(){return this._rowHeight}set rowHeight(t){const e=`${null==t?"":t}`;e!==this._rowHeight&&(this._rowHeight=e,this._setTileStyler(this._rowHeight))}ngOnInit(){this._checkCols(),this._checkRowHeight()}ngAfterContentChecked(){this._layoutTiles()}_checkCols(){if(!this.cols)throw Error('mat-grid-list: must pass in number of columns. Example: <mat-grid-list cols="3">')}_checkRowHeight(){this._rowHeight||this._setTileStyler("1:1")}_setTileStyler(t){this._tileStyler&&this._tileStyler.reset(this),this._tileStyler=t===f?new w:t&&t.indexOf(":")>-1?new d(t):new u(t)}_layoutTiles(){this._tileCoordinator||(this._tileCoordinator=new a);const t=this._tileCoordinator,e=this._tiles.filter(t=>!t._gridList||t._gridList===this),i=this._dir?this._dir.value:"ltr";this._tileCoordinator.update(this.cols,e),this._tileStyler.init(this.gutterSize,t,this.cols,i),e.forEach((e,i)=>{const s=t.positions[i];this._tileStyler.setStyle(e,s.row,s.col)}),this._setListStyle(this._tileStyler.getComputedHeight())}_setListStyle(t){t&&(this._element.nativeElement.style[t[0]]=t[1])}}class m{}}}]);